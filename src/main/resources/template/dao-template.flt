package ${packageName};


import ${entityPackage};
import ${queryEntityPackage};
import ${pagerEntityPackage};
import org.apache.ibatis.annotations.Param;

import java.util.List;

/**
 * the ${entityName} dao interface.
 *
 * @author ${author}
 * @since ${createTime}
 */
public interface ${daoClassName} {

  /**
   * 根据指定条件进查询,并通过指定字段进行过滤.
   *
   * @param whereEntity 查询条件
   * @param inFiled     过滤字段名
   * @param inValues    过滤字段值
   * @return
   */
  public List<${entityName}> findListWithIn(@Param("query") ${entityName}Query whereEntity, @Param("inFiled") String inFiled,
                                           @Param("inValues") List<Object> inValues);

  /**
   * 通过查询条件进行记录更新.
   *
   * @param entity      待更新的业务信息
   * @param whereEntity 查询条件
   * @return 更新成功记录数
   */
  public int updateBySelective(@Param("entity") ${entityName} entity, @Param("criteria") ${entityName}Query whereEntity);

  /**
   * 根据Id进行查询.
   *
   * @param ids id列表
   * @return 业务实体${entityName}对象
   */
  public List<${entityName}> batchFindById(List<Long> ids);

  /**
   * 根据条件进行列表查询.
   *
   * @param whereEntity 查询条件
   * @return 业务实体T对象列表
   */
  public List<${entityName}> findList(${entityName}Query whereEntity);

  /**
   * 通过指定的条件进行分页查询.
   *
   * @param whereEntity 查询条件对象
   * @param pager       分页信息
   * @return 结果列表
   */
  public List<${entityName}> findPage(@Param("query") ${entityName}Query whereEntity, @Param("pager") Pager pager);

  /**
   * 批量插入记录.
   *
   * @param entities 待插入的业务实体列表
   * @return 业务实体对象列表
   */
  public int batchInsert(List<${entityName}> entities);

  /**
   * 查询满足条件的总记录数.
   *
   * @param whereEntity 查询条件
   * @return 满足条件的总记录数
   */
  public long count(${entityName}Query whereEntity);

  /**
   * 根据条件进行单条记录查询.
   *
   * @param whereEntity 查询条件
   * @return 业务实体${entityName}对象
   */
  public ${entityName} findOne(${entityName}Query whereEntity);

  /**
   * 新插入记录.
   *
   * @param entity 待插入的业务实体
   * @return 业务实体对象
   */
  public long insert(${entityName} entity);

}