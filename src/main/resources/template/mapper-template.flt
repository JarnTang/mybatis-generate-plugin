<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${daoClassPackage}">

  <resultMap id="${resultMapName}" type="${resultMapType}">
<#list fields as field>
  <#if field=="id">
      ${r'<id column="id" property="id"/>'}
  <#else>
      <result column="${field.dbColumn}" property="${field.javaField}"/>
  </#if>
</#list>
  </resultMap>

  <sql id="fields">
      ${fieldNames?join(", ")}
  </sql>

  <select id="count" parameterType="${resultMapType}"
          resultType="java.lang.Long">
      SELECT count(1) FROM ${tableName}
      <where>
      <#list fields as field>
          <if test="${field.javaField} != null">AND ${field.dbColumn} = ${r"#{"}${field.javaField}}</if>
      </#list>
      </where>
      limit 1
  </select>

  <insert id="insert" keyProperty="id" useGeneratedKeys="true"
          parameterType="${resultMapType}">
      INSERT INTO
      ${tableName}
      <trim prefix="(" suffix=")" suffixOverrides=",">
      <#list fields as field>
          <#if field.dbColumn=="created"||field.dbColumn=="updated">
           ${field.dbColumn},
          <#else >
          <if test="${field.javaField} != null">${field.dbColumn},</if>
          </#if>
      </#list>
      </trim>
      VALUES
      <trim prefix="(" suffix=")" suffixOverrides=",">
      <#list fields as field>
      <#if field.dbColumn=="created"||field.dbColumn=="updated">
          unix_timestamp(),
      <#else >
          <if test="${field.javaField} != null">${r"#{"}${field.javaField}},</if>
      </#if>
      </#list>
      </trim>
  </insert>

  <select id="findList" parameterType="${resultMapType}"
          resultMap="${resultMapName}">
      SELECT
      <include refid="fields"/>
      FROM ${tableName}
      <where>
      <#list fields as field>
          <if test="${field.javaField} != null">AND ${field.dbColumn} = ${r"#{"}${field.javaField}}</if>
      </#list>
      </where>
      limit 5000
  </select>

  <select id="findOne" parameterType="${resultMapType}"
          resultMap="${resultMapName}">
      SELECT
      <include refid="fields"/>
      FROM ${tableName}
      <where>
      <#list fields as field>
          <if test="${field.javaField} != null">AND ${field.dbColumn} = ${r"#{"}${field.javaField}}</if>
      </#list>
      </where>
      limit 1
  </select>

  <select id="findPage" parameterType="${resultMapType}"
          resultMap="${resultMapName}">
      SELECT
      <include refid="fields"/>
      FROM ${tableName}
      <where>
      <#list fields as field>
          <if test="query.${field.javaField} != null">AND ${field.dbColumn} = ${r"#{query."}${field.javaField}}</if>
      </#list>
      </where>
      ${r"limit #{pager.start},#{pager.size}"}
  </select>

  <select id="batchFindById" parameterType="${resultMapType}"
          resultMap="${resultMapName}">
      SELECT
      <include refid="fields"/>
      FROM ${tableName} WHERE
      id IN
      <foreach collection="list" item="id" open="(" close=")" separator=",">
      ${r"#{id}"}
      </foreach>
      limit 5000
  </select>

  <select id="findListWithIn" parameterType="${resultMapType}"
          resultMap="${resultMapName}">
      SELECT
      <include refid="fields"/>
      FROM ${tableName}
      <where>
      <#list fields as field>
          <if test="query.${field.javaField} != null">AND ${field.dbColumn} = ${r"#{query."}${field.javaField}}</if>
      </#list>
          <if test="inValues != null">
              AND ${r"${inFiled}"} in
              <foreach collection="inValues" item="value" open="(" close=")" separator=",">
              ${r"#{value}"}
              </foreach>
          </if>
      </where>
      limit 5000
  </select>

  <insert id="batchInsert" useGeneratedKeys="true" parameterType="${resultMapType}">
      INSERT INTO ${tableName}
      <trim prefix="(" suffix=")" suffixOverrides=",">
      <#list fields as field>
          <#if field.dbColumn!="id">
          ${field.dbColumn},
          </#if>
      </#list>
      </trim>
      VALUES
      <foreach collection="list" item="item" index="index" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
      <#list fields as field>
          <#if field.dbColumn=="id">
          <#elseif field.dbColumn=="created"||field.dbColumn=="updated">
          unix_timestamp(),
          <#else >
          ${r"#{item."}${field.javaField}},
          </#if>
      </#list>
      </trim>
      </foreach>
  </insert>

  <update id="updateBySelective" parameterType="${resultMapType}">
      UPDATE ${tableName}
      <set>
      <#list fields as field>
      <#if field.dbColumn == "created">
      <#elseif field.dbColumn=="updated">
          updated = UNIX_TIMESTAMP(),
      <#else >
          <if test="entity.${field.javaField} != null">${field.dbColumn} = ${r"#{entity."}${field.javaField}},</if>
      </#if>
      </#list>
      </set>
      <where>
      <#list fields as field>
          <if test="criteria.${field.javaField} != null">AND ${field.dbColumn} = ${r"#{criteria."}${field.javaField}}</if>
      </#list>
      </where>
      limit 100
  </update>

</mapper>